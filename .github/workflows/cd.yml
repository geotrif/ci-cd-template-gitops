name: GitOps CD (validate & optionally ping Argo CD)

on:
  push:
    branches: [ "main", "master" ]
    paths:
      - "apps/**"
      - "charts/**"
      - "values/**"
      - ".github/workflows/cd.yaml"
  pull_request:
    paths:
      - "apps/**"
      - "charts/**"
      - "values/**"
      - ".github/workflows/cd.yaml"
  workflow_dispatch:

permissions:
  contents: read

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Lint YAML
      - name: Install yamllint
        run: |
          sudo apt-get update -y
          sudo apt-get install -y yamllint
      - name: Run yamllint
        run: |
          yamllint -s apps || true  # keep strict if you want: remove "|| true"
          yamllint -s charts || true

      # Helm lint each chart
      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.4
      - name: Helm dependency update (all charts)
        run: |
          for c in charts/*; do
            [ -d "$c" ] || continue
            helm dependency update "$c" || true
          done
      - name: Helm lint (all charts)
        run: |
          set -e
          for c in charts/*; do
            [ -d "$c" ] || continue
            echo "::group::helm lint $c"
            helm lint "$c"
            echo "::endgroup::"
          done

      # Render Helm â†’ validate against Kubernetes schemas
      - name: Install kubeconform
        run: |
          curl -L -o kubeconform.tar.gz https://github.com/yannh/kubeconform/releases/download/v0.6.4/kubeconform-linux-amd64.tar.gz
          tar -xzf kubeconform.tar.gz kubeconform
          sudo mv kubeconform /usr/local/bin/
          kubeconform -v
      - name: Render & validate (all charts)
        run: |
          set -e
          # Adjust NAMESPACE if your apps deploy elsewhere
          NAMESPACE=apps
          for c in charts/*; do
            [ -d "$c" ] || continue
            echo "::group::helm template $c | kubeconform"
            helm template "$c" --namespace "$NAMESPACE" \
            | kubeconform -strict -ignore-missing-schemas
            echo "::endgroup::"
          done

  # Optional: ping Argo CD webhook to speed up syncs (Argo CD will
  # still auto-sync on its own poll interval). Create a repo secret:
  # ARGOCD_WEBHOOK_URL = https://argocd-server/api/webhook?token=...
  ping-argocd:
    if: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') && secrets.ARGOCD_WEBHOOK_URL != '' }}
    runs-on: ubuntu-latest
    needs: [validate]
    steps:
      - name: Call Argo CD webhook
        run: |
          curl -fsSL -X POST "${{ secrets.ARGOCD_WEBHOOK_URL }}"
